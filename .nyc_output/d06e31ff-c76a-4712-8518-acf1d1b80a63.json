{"/Users/ellenzhang/Desktop/project_team213/src/controller/IInsightFacade.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":1,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/IInsightFacade.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4a2319d457243a4692166cd5b6dbf64bfb842f3d","contentHash":"9fcd37cedaa3053f8b5e5f87c8d3fed095ddccb6a5f2de99dfbd4fcef19e976e"},"/Users/ellenzhang/Desktop/project_team213/src/controller/InsightFacade.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":24},"end":{"line":30,"column":67}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":44}},"30":{"start":{"line":32,"column":18},"end":{"line":32,"column":38}},"31":{"start":{"line":33,"column":23},"end":{"line":33,"column":65}},"32":{"start":{"line":35,"column":20},"end":{"line":35,"column":22}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"34":{"start":{"line":39,"column":8},"end":{"line":39,"column":49}},"35":{"start":{"line":40,"column":8},"end":{"line":40,"column":57}},"36":{"start":{"line":43,"column":8},"end":{"line":63,"column":11}},"37":{"start":{"line":44,"column":12},"end":{"line":62,"column":13}},"38":{"start":{"line":45,"column":16},"end":{"line":45,"column":86}},"39":{"start":{"line":47,"column":17},"end":{"line":62,"column":13}},"40":{"start":{"line":48,"column":16},"end":{"line":48,"column":87}},"41":{"start":{"line":50,"column":17},"end":{"line":62,"column":13}},"42":{"start":{"line":51,"column":16},"end":{"line":51,"column":90}},"43":{"start":{"line":54,"column":16},"end":{"line":61,"column":19}},"44":{"start":{"line":55,"column":20},"end":{"line":55,"column":69}},"45":{"start":{"line":56,"column":20},"end":{"line":56,"column":47}},"46":{"start":{"line":58,"column":20},"end":{"line":58,"column":61}},"47":{"start":{"line":60,"column":20},"end":{"line":60,"column":80}},"48":{"start":{"line":66,"column":8},"end":{"line":66,"column":35}},"49":{"start":{"line":67,"column":8},"end":{"line":67,"column":72}},"50":{"start":{"line":70,"column":8},"end":{"line":85,"column":11}},"51":{"start":{"line":71,"column":12},"end":{"line":84,"column":13}},"52":{"start":{"line":72,"column":16},"end":{"line":72,"column":86}},"53":{"start":{"line":74,"column":17},"end":{"line":84,"column":13}},"54":{"start":{"line":75,"column":16},"end":{"line":75,"column":90}},"55":{"start":{"line":78,"column":16},"end":{"line":78,"column":46}},"56":{"start":{"line":79,"column":16},"end":{"line":83,"column":19}},"57":{"start":{"line":80,"column":20},"end":{"line":80,"column":32}},"58":{"start":{"line":82,"column":20},"end":{"line":82,"column":32}},"59":{"start":{"line":88,"column":19},"end":{"line":88,"column":21}},"60":{"start":{"line":89,"column":8},"end":{"line":95,"column":9}},"61":{"start":{"line":90,"column":12},"end":{"line":94,"column":15}},"62":{"start":{"line":96,"column":8},"end":{"line":96,"column":37}},"63":{"start":{"line":98,"column":13},"end":{"line":98,"column":15}},"64":{"start":{"line":99,"column":15},"end":{"line":99,"column":17}},"65":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"66":{"start":{"line":102,"column":12},"end":{"line":102,"column":22}},"67":{"start":{"line":104,"column":23},"end":{"line":104,"column":92}},"68":{"start":{"line":105,"column":18},"end":{"line":105,"column":20}},"69":{"start":{"line":106,"column":8},"end":{"line":115,"column":11}},"70":{"start":{"line":107,"column":30},"end":{"line":107,"column":32}},"71":{"start":{"line":108,"column":12},"end":{"line":108,"column":88}},"72":{"start":{"line":109,"column":12},"end":{"line":109,"column":47}},"73":{"start":{"line":110,"column":12},"end":{"line":113,"column":13}},"74":{"start":{"line":111,"column":24},"end":{"line":111,"column":175}},"75":{"start":{"line":112,"column":16},"end":{"line":112,"column":36}},"76":{"start":{"line":114,"column":12},"end":{"line":114,"column":40}},"77":{"start":{"line":116,"column":8},"end":{"line":116,"column":19}},"78":{"start":{"line":119,"column":19},"end":{"line":119,"column":54}},"79":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"80":{"start":{"line":121,"column":8},"end":{"line":121,"column":51}},"81":{"start":{"line":122,"column":19},"end":{"line":122,"column":64}},"82":{"start":{"line":123,"column":8},"end":{"line":128,"column":9}},"83":{"start":{"line":124,"column":12},"end":{"line":124,"column":122}},"84":{"start":{"line":127,"column":12},"end":{"line":127,"column":79}},"85":{"start":{"line":129,"column":21},"end":{"line":129,"column":43}},"86":{"start":{"line":130,"column":8},"end":{"line":130,"column":28}},"87":{"start":{"line":131,"column":8},"end":{"line":131,"column":39}},"88":{"start":{"line":134,"column":8},"end":{"line":134,"column":24}},"89":{"start":{"line":135,"column":8},"end":{"line":179,"column":9}},"90":{"start":{"line":136,"column":12},"end":{"line":136,"column":28}},"91":{"start":{"line":137,"column":27},"end":{"line":137,"column":45}},"92":{"start":{"line":138,"column":31},"end":{"line":138,"column":33}},"93":{"start":{"line":139,"column":12},"end":{"line":173,"column":13}},"94":{"start":{"line":140,"column":16},"end":{"line":149,"column":17}},"95":{"start":{"line":140,"column":29},"end":{"line":140,"column":30}},"96":{"start":{"line":141,"column":31},"end":{"line":141,"column":65}},"97":{"start":{"line":142,"column":20},"end":{"line":142,"column":47}},"98":{"start":{"line":143,"column":20},"end":{"line":148,"column":21}},"99":{"start":{"line":144,"column":24},"end":{"line":144,"column":51}},"100":{"start":{"line":147,"column":24},"end":{"line":147,"column":78}},"101":{"start":{"line":151,"column":17},"end":{"line":173,"column":13}},"102":{"start":{"line":152,"column":16},"end":{"line":161,"column":17}},"103":{"start":{"line":152,"column":29},"end":{"line":152,"column":30}},"104":{"start":{"line":153,"column":31},"end":{"line":153,"column":65}},"105":{"start":{"line":154,"column":20},"end":{"line":154,"column":37}},"106":{"start":{"line":155,"column":20},"end":{"line":160,"column":21}},"107":{"start":{"line":156,"column":24},"end":{"line":156,"column":51}},"108":{"start":{"line":159,"column":24},"end":{"line":159,"column":81}},"109":{"start":{"line":163,"column":17},"end":{"line":173,"column":13}},"110":{"start":{"line":164,"column":16},"end":{"line":164,"column":43}},"111":{"start":{"line":165,"column":16},"end":{"line":172,"column":17}},"112":{"start":{"line":166,"column":31},"end":{"line":166,"column":70}},"113":{"start":{"line":167,"column":31},"end":{"line":167,"column":65}},"114":{"start":{"line":168,"column":20},"end":{"line":168,"column":63}},"115":{"start":{"line":171,"column":20},"end":{"line":171,"column":67}},"116":{"start":{"line":174,"column":12},"end":{"line":174,"column":32}},"117":{"start":{"line":177,"column":31},"end":{"line":177,"column":66}},"118":{"start":{"line":178,"column":12},"end":{"line":178,"column":32}},"119":{"start":{"line":182,"column":20},"end":{"line":182,"column":38}},"120":{"start":{"line":183,"column":23},"end":{"line":183,"column":25}},"121":{"start":{"line":184,"column":18},"end":{"line":184,"column":20}},"122":{"start":{"line":185,"column":8},"end":{"line":214,"column":9}},"123":{"start":{"line":186,"column":12},"end":{"line":213,"column":13}},"124":{"start":{"line":187,"column":16},"end":{"line":187,"column":69}},"125":{"start":{"line":188,"column":16},"end":{"line":188,"column":60}},"126":{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},"127":{"start":{"line":190,"column":20},"end":{"line":191,"column":50}},"128":{"start":{"line":194,"column":17},"end":{"line":213,"column":13}},"129":{"start":{"line":195,"column":29},"end":{"line":195,"column":58}},"130":{"start":{"line":196,"column":28},"end":{"line":196,"column":57}},"131":{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},"132":{"start":{"line":198,"column":20},"end":{"line":198,"column":37}},"133":{"start":{"line":200,"column":16},"end":{"line":209,"column":17}},"134":{"start":{"line":201,"column":20},"end":{"line":203,"column":21}},"135":{"start":{"line":202,"column":24},"end":{"line":202,"column":93}},"136":{"start":{"line":204,"column":20},"end":{"line":205,"column":49}},"137":{"start":{"line":204,"column":39},"end":{"line":205,"column":47}},"138":{"start":{"line":208,"column":20},"end":{"line":208,"column":72}},"139":{"start":{"line":212,"column":16},"end":{"line":212,"column":71}},"140":{"start":{"line":215,"column":8},"end":{"line":215,"column":19}},"141":{"start":{"line":218,"column":27},"end":{"line":218,"column":29}},"142":{"start":{"line":219,"column":8},"end":{"line":262,"column":9}},"143":{"start":{"line":220,"column":12},"end":{"line":220,"column":30}},"144":{"start":{"line":221,"column":24},"end":{"line":221,"column":29}},"145":{"start":{"line":222,"column":22},"end":{"line":222,"column":27}},"146":{"start":{"line":223,"column":24},"end":{"line":223,"column":47}},"147":{"start":{"line":224,"column":12},"end":{"line":228,"column":13}},"148":{"start":{"line":225,"column":16},"end":{"line":225,"column":33}},"149":{"start":{"line":226,"column":16},"end":{"line":226,"column":71}},"150":{"start":{"line":227,"column":16},"end":{"line":227,"column":36}},"151":{"start":{"line":229,"column":12},"end":{"line":233,"column":13}},"152":{"start":{"line":230,"column":16},"end":{"line":230,"column":34}},"153":{"start":{"line":231,"column":16},"end":{"line":231,"column":43}},"154":{"start":{"line":232,"column":16},"end":{"line":232,"column":29}},"155":{"start":{"line":234,"column":12},"end":{"line":238,"column":13}},"156":{"start":{"line":235,"column":16},"end":{"line":235,"column":34}},"157":{"start":{"line":236,"column":16},"end":{"line":236,"column":61}},"158":{"start":{"line":237,"column":16},"end":{"line":237,"column":27}},"159":{"start":{"line":239,"column":12},"end":{"line":241,"column":13}},"160":{"start":{"line":239,"column":25},"end":{"line":239,"column":26}},"161":{"start":{"line":240,"column":16},"end":{"line":240,"column":97}},"162":{"start":{"line":244,"column":24},"end":{"line":244,"column":37}},"163":{"start":{"line":245,"column":12},"end":{"line":261,"column":13}},"164":{"start":{"line":245,"column":25},"end":{"line":245,"column":26}},"165":{"start":{"line":246,"column":16},"end":{"line":260,"column":17}},"166":{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},"167":{"start":{"line":248,"column":24},"end":{"line":248,"column":45}},"168":{"start":{"line":251,"column":21},"end":{"line":260,"column":17}},"169":{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},"170":{"start":{"line":253,"column":24},"end":{"line":253,"column":45}},"171":{"start":{"line":256,"column":21},"end":{"line":260,"column":17}},"172":{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},"173":{"start":{"line":258,"column":24},"end":{"line":258,"column":45}},"174":{"start":{"line":263,"column":8},"end":{"line":263,"column":28}},"175":{"start":{"line":266,"column":8},"end":{"line":285,"column":9}},"176":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"177":{"start":{"line":268,"column":16},"end":{"line":268,"column":37}},"178":{"start":{"line":271,"column":13},"end":{"line":285,"column":9}},"179":{"start":{"line":272,"column":12},"end":{"line":274,"column":13}},"180":{"start":{"line":273,"column":16},"end":{"line":273,"column":37}},"181":{"start":{"line":276,"column":13},"end":{"line":285,"column":9}},"182":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"183":{"start":{"line":278,"column":16},"end":{"line":278,"column":37}},"184":{"start":{"line":282,"column":12},"end":{"line":284,"column":13}},"185":{"start":{"line":283,"column":16},"end":{"line":283,"column":37}},"186":{"start":{"line":286,"column":8},"end":{"line":286,"column":28}},"187":{"start":{"line":289,"column":8},"end":{"line":289,"column":64}},"188":{"start":{"line":289,"column":40},"end":{"line":289,"column":62}},"189":{"start":{"line":292,"column":18},"end":{"line":292,"column":36}},"190":{"start":{"line":293,"column":8},"end":{"line":293,"column":33}},"191":{"start":{"line":296,"column":19},"end":{"line":296,"column":31}},"192":{"start":{"line":297,"column":8},"end":{"line":297,"column":48}},"193":{"start":{"line":297,"column":34},"end":{"line":297,"column":46}},"194":{"start":{"line":300,"column":0},"end":{"line":300,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":18},"end":{"line":41,"column":5}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":34},"end":{"line":64,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":43,"column":27},"end":{"line":43,"column":28}},"loc":{"start":{"line":43,"column":48},"end":{"line":63,"column":9}},"line":43},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":72},"end":{"line":54,"column":73}},"loc":{"start":{"line":54,"column":79},"end":{"line":57,"column":17}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":57,"column":24},"end":{"line":57,"column":25}},"loc":{"start":{"line":57,"column":30},"end":{"line":59,"column":17}},"line":57},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":25},"end":{"line":59,"column":26}},"loc":{"start":{"line":59,"column":36},"end":{"line":61,"column":17}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":19},"end":{"line":68,"column":5}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":22},"end":{"line":86,"column":5}},"line":69},"15":{"name":"(anonymous_15)","decl":{"start":{"line":70,"column":27},"end":{"line":70,"column":28}},"loc":{"start":{"line":70,"column":48},"end":{"line":85,"column":9}},"line":70},"16":{"name":"(anonymous_16)","decl":{"start":{"line":79,"column":41},"end":{"line":79,"column":42}},"loc":{"start":{"line":79,"column":47},"end":{"line":81,"column":17}},"line":79},"17":{"name":"(anonymous_17)","decl":{"start":{"line":81,"column":25},"end":{"line":81,"column":26}},"loc":{"start":{"line":81,"column":34},"end":{"line":83,"column":17}},"line":81},"18":{"name":"(anonymous_18)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":19},"end":{"line":97,"column":5}},"line":87},"19":{"name":"(anonymous_19)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":19},"end":{"line":117,"column":5}},"line":100},"20":{"name":"(anonymous_20)","decl":{"start":{"line":106,"column":38},"end":{"line":106,"column":39}},"loc":{"start":{"line":106,"column":53},"end":{"line":115,"column":9}},"line":106},"21":{"name":"(anonymous_21)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":24},"end":{"line":132,"column":5}},"line":118},"22":{"name":"(anonymous_22)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":27},"end":{"line":180,"column":5}},"line":133},"23":{"name":"(anonymous_23)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":22},"end":{"line":216,"column":5}},"line":181},"24":{"name":"(anonymous_24)","decl":{"start":{"line":204,"column":29},"end":{"line":204,"column":30}},"loc":{"start":{"line":204,"column":39},"end":{"line":205,"column":47}},"line":204},"25":{"name":"(anonymous_25)","decl":{"start":{"line":217,"column":4},"end":{"line":217,"column":5}},"loc":{"start":{"line":217,"column":35},"end":{"line":264,"column":5}},"line":217},"26":{"name":"(anonymous_26)","decl":{"start":{"line":265,"column":4},"end":{"line":265,"column":5}},"loc":{"start":{"line":265,"column":60},"end":{"line":287,"column":5}},"line":265},"27":{"name":"(anonymous_27)","decl":{"start":{"line":288,"column":4},"end":{"line":288,"column":5}},"loc":{"start":{"line":288,"column":30},"end":{"line":290,"column":5}},"line":288},"28":{"name":"(anonymous_28)","decl":{"start":{"line":289,"column":27},"end":{"line":289,"column":28}},"loc":{"start":{"line":289,"column":40},"end":{"line":289,"column":62}},"line":289},"29":{"name":"(anonymous_29)","decl":{"start":{"line":291,"column":4},"end":{"line":291,"column":5}},"loc":{"start":{"line":291,"column":33},"end":{"line":294,"column":5}},"line":291},"30":{"name":"(anonymous_30)","decl":{"start":{"line":295,"column":4},"end":{"line":295,"column":5}},"loc":{"start":{"line":295,"column":26},"end":{"line":298,"column":5}},"line":295},"31":{"name":"(anonymous_31)","decl":{"start":{"line":297,"column":27},"end":{"line":297,"column":28}},"loc":{"start":{"line":297,"column":34},"end":{"line":297,"column":46}},"line":297}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":44,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":62,"column":13}},{"start":{"line":44,"column":12},"end":{"line":62,"column":13}}],"line":44},"20":{"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":73}},"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":27}},{"start":{"line":44,"column":31},"end":{"line":44,"column":47}},{"start":{"line":44,"column":51},"end":{"line":44,"column":73}}],"line":44},"21":{"loc":{"start":{"line":47,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":17},"end":{"line":62,"column":13}},{"start":{"line":47,"column":17},"end":{"line":62,"column":13}}],"line":47},"22":{"loc":{"start":{"line":50,"column":17},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":17},"end":{"line":62,"column":13}},{"start":{"line":50,"column":17},"end":{"line":62,"column":13}}],"line":50},"23":{"loc":{"start":{"line":71,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":84,"column":13}},{"start":{"line":71,"column":12},"end":{"line":84,"column":13}}],"line":71},"24":{"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":73}},"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":27}},{"start":{"line":71,"column":31},"end":{"line":71,"column":47}},{"start":{"line":71,"column":51},"end":{"line":71,"column":73}}],"line":71},"25":{"loc":{"start":{"line":74,"column":17},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":17},"end":{"line":84,"column":13}},{"start":{"line":74,"column":17},"end":{"line":84,"column":13}}],"line":74},"26":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"27":{"loc":{"start":{"line":123,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":128,"column":9}},{"start":{"line":123,"column":8},"end":{"line":128,"column":9}}],"line":123},"28":{"loc":{"start":{"line":135,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":179,"column":9}},{"start":{"line":135,"column":8},"end":{"line":179,"column":9}}],"line":135},"29":{"loc":{"start":{"line":139,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":173,"column":13}},{"start":{"line":139,"column":12},"end":{"line":173,"column":13}}],"line":139},"30":{"loc":{"start":{"line":143,"column":20},"end":{"line":148,"column":21}},"type":"if","locations":[{"start":{"line":143,"column":20},"end":{"line":148,"column":21}},{"start":{"line":143,"column":20},"end":{"line":148,"column":21}}],"line":143},"31":{"loc":{"start":{"line":143,"column":24},"end":{"line":143,"column":60}},"type":"binary-expr","locations":[{"start":{"line":143,"column":24},"end":{"line":143,"column":49}},{"start":{"line":143,"column":53},"end":{"line":143,"column":60}}],"line":143},"32":{"loc":{"start":{"line":151,"column":17},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":151,"column":17},"end":{"line":173,"column":13}},{"start":{"line":151,"column":17},"end":{"line":173,"column":13}}],"line":151},"33":{"loc":{"start":{"line":155,"column":20},"end":{"line":160,"column":21}},"type":"if","locations":[{"start":{"line":155,"column":20},"end":{"line":160,"column":21}},{"start":{"line":155,"column":20},"end":{"line":160,"column":21}}],"line":155},"34":{"loc":{"start":{"line":163,"column":17},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":163,"column":17},"end":{"line":173,"column":13}},{"start":{"line":163,"column":17},"end":{"line":173,"column":13}}],"line":163},"35":{"loc":{"start":{"line":165,"column":16},"end":{"line":172,"column":17}},"type":"if","locations":[{"start":{"line":165,"column":16},"end":{"line":172,"column":17}},{"start":{"line":165,"column":16},"end":{"line":172,"column":17}}],"line":165},"36":{"loc":{"start":{"line":186,"column":12},"end":{"line":213,"column":13}},"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":213,"column":13}},{"start":{"line":186,"column":12},"end":{"line":213,"column":13}}],"line":186},"37":{"loc":{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},{"start":{"line":189,"column":16},"end":{"line":192,"column":17}}],"line":189},"38":{"loc":{"start":{"line":194,"column":17},"end":{"line":213,"column":13}},"type":"if","locations":[{"start":{"line":194,"column":17},"end":{"line":213,"column":13}},{"start":{"line":194,"column":17},"end":{"line":213,"column":13}}],"line":194},"39":{"loc":{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},"type":"if","locations":[{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},{"start":{"line":197,"column":16},"end":{"line":199,"column":17}}],"line":197},"40":{"loc":{"start":{"line":200,"column":16},"end":{"line":209,"column":17}},"type":"if","locations":[{"start":{"line":200,"column":16},"end":{"line":209,"column":17}},{"start":{"line":200,"column":16},"end":{"line":209,"column":17}}],"line":200},"41":{"loc":{"start":{"line":200,"column":20},"end":{"line":200,"column":76}},"type":"binary-expr","locations":[{"start":{"line":200,"column":20},"end":{"line":200,"column":46}},{"start":{"line":200,"column":50},"end":{"line":200,"column":76}}],"line":200},"42":{"loc":{"start":{"line":204,"column":39},"end":{"line":205,"column":47}},"type":"cond-expr","locations":[{"start":{"line":205,"column":41},"end":{"line":205,"column":42}},{"start":{"line":205,"column":45},"end":{"line":205,"column":47}}],"line":204},"43":{"loc":{"start":{"line":219,"column":8},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":262,"column":9}},{"start":{"line":219,"column":8},"end":{"line":262,"column":9}}],"line":219},"44":{"loc":{"start":{"line":224,"column":12},"end":{"line":228,"column":13}},"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":228,"column":13}},{"start":{"line":224,"column":12},"end":{"line":228,"column":13}}],"line":224},"45":{"loc":{"start":{"line":229,"column":12},"end":{"line":233,"column":13}},"type":"if","locations":[{"start":{"line":229,"column":12},"end":{"line":233,"column":13}},{"start":{"line":229,"column":12},"end":{"line":233,"column":13}}],"line":229},"46":{"loc":{"start":{"line":234,"column":12},"end":{"line":238,"column":13}},"type":"if","locations":[{"start":{"line":234,"column":12},"end":{"line":238,"column":13}},{"start":{"line":234,"column":12},"end":{"line":238,"column":13}}],"line":234},"47":{"loc":{"start":{"line":246,"column":16},"end":{"line":260,"column":17}},"type":"if","locations":[{"start":{"line":246,"column":16},"end":{"line":260,"column":17}},{"start":{"line":246,"column":16},"end":{"line":260,"column":17}}],"line":246},"48":{"loc":{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},"type":"if","locations":[{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},{"start":{"line":247,"column":20},"end":{"line":249,"column":21}}],"line":247},"49":{"loc":{"start":{"line":251,"column":21},"end":{"line":260,"column":17}},"type":"if","locations":[{"start":{"line":251,"column":21},"end":{"line":260,"column":17}},{"start":{"line":251,"column":21},"end":{"line":260,"column":17}}],"line":251},"50":{"loc":{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},"type":"if","locations":[{"start":{"line":252,"column":20},"end":{"line":254,"column":21}},{"start":{"line":252,"column":20},"end":{"line":254,"column":21}}],"line":252},"51":{"loc":{"start":{"line":256,"column":21},"end":{"line":260,"column":17}},"type":"if","locations":[{"start":{"line":256,"column":21},"end":{"line":260,"column":17}},{"start":{"line":256,"column":21},"end":{"line":260,"column":17}}],"line":256},"52":{"loc":{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},"type":"if","locations":[{"start":{"line":257,"column":20},"end":{"line":259,"column":21}},{"start":{"line":257,"column":20},"end":{"line":259,"column":21}}],"line":257},"53":{"loc":{"start":{"line":266,"column":8},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":285,"column":9}},{"start":{"line":266,"column":8},"end":{"line":285,"column":9}}],"line":266},"54":{"loc":{"start":{"line":266,"column":12},"end":{"line":266,"column":24}},"type":"binary-expr","locations":[{"start":{"line":266,"column":12},"end":{"line":266,"column":17}},{"start":{"line":266,"column":21},"end":{"line":266,"column":24}}],"line":266},"55":{"loc":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"type":"if","locations":[{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},{"start":{"line":267,"column":12},"end":{"line":269,"column":13}}],"line":267},"56":{"loc":{"start":{"line":271,"column":13},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":271,"column":13},"end":{"line":285,"column":9}},{"start":{"line":271,"column":13},"end":{"line":285,"column":9}}],"line":271},"57":{"loc":{"start":{"line":272,"column":12},"end":{"line":274,"column":13}},"type":"if","locations":[{"start":{"line":272,"column":12},"end":{"line":274,"column":13}},{"start":{"line":272,"column":12},"end":{"line":274,"column":13}}],"line":272},"58":{"loc":{"start":{"line":276,"column":13},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":276,"column":13},"end":{"line":285,"column":9}},{"start":{"line":276,"column":13},"end":{"line":285,"column":9}}],"line":276},"59":{"loc":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},{"start":{"line":277,"column":12},"end":{"line":279,"column":13}}],"line":277},"60":{"loc":{"start":{"line":282,"column":12},"end":{"line":284,"column":13}},"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":284,"column":13}},{"start":{"line":282,"column":12},"end":{"line":284,"column":13}}],"line":282}},"s":{"0":1,"1":146,"2":146,"3":146,"4":146,"5":146,"6":5,"7":146,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":146,"21":146,"22":1,"23":1,"24":1,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":1,"45":1,"46":1,"47":0,"48":2,"49":2,"50":2,"51":2,"52":0,"53":2,"54":1,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1},"f":{"0":146,"1":5,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":2,"14":2,"15":2,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"0":[1,1,1],"1":[1,0],"2":[146,0],"3":[146,0],"4":[146,146],"5":[0,146],"6":[146,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[146,0],"15":[146,146],"16":[1,1,1],"17":[2,0],"18":[2,2],"19":[0,1],"20":[1,1,1],"21":[0,1],"22":[0,1],"23":[0,2],"24":[2,2,2],"25":[1,1],"26":[1,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/InsightFacade.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError, ResultTooLargeError\n} from \"./IInsightFacade\";\nimport DataSetHelper from \"./DataSetHelper\";\nimport * as fs from \"fs-extra\";\nimport {QueryTreeNode} from \"./QueryTreeNode\";\nimport {Section} from \"./Section\";\nimport QueryBuilder from \"./QueryBuilder\";\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\n\n\nexport default class InsightFacade implements IInsightFacade {\n\n\tprivate idAndDatasets: {[key: string]: {kind: InsightDatasetKind, data: any[]}} = {};\n\tprivate querybuilder: QueryBuilder;\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.idAndDatasets = this.loadFromDisk();\n\t\tthis.querybuilder = new QueryBuilder();\n\t}\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\tif (id === null || id.includes(\"_\") || id.trim().length === 0) {\n\t\t\t\treject(new InsightError(\"The input id is invalid!\"));\n\t\t\t}else if (Object.keys(this.idAndDatasets).includes(id)) {\n\t\t\t\treject(new InsightError(\"The input id has existed!\"));\n\t\t\t}else if (!(kind === InsightDatasetKind.Sections)) {\n\t\t\t\treject(new InsightError(\"The input kind is not valid!\"));\n\t\t\t}else{\n\t\t\t\tDataSetHelper.addSectionDataset(content).then((r: any) => {\n\t\t\t\t\tthis.idAndDatasets[id] = {kind: kind, data: r};\n\t\t\t\t\treturn this.writeToFiles();\n\t\t\t\t}).then(() => {\n\t\t\t\t\tresolve(Object.keys(this.idAndDatasets));\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\treject(new InsightError(\"Invalid files.\"));\n\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate writeToFiles() {\n\t\tfs.ensureDirSync(\"./data\");\n\t\treturn fs.writeJson(\"./data/datasets.json\", this.idAndDatasets);\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\tif (id === null || id.includes(\"_\") || id.trim().length === 0) {\n\t\t\t\treject(new InsightError(\"The input id is invalid!\"));\n\t\t\t}else if (!Object.keys(this.idAndDatasets).includes(id)) {\n\t\t\t\treject(new NotFoundError(\"The input id did not exist!\"));\n\t\t\t}else{\n\t\t\t\tdelete this.idAndDatasets[id];\n\t\t\t\tthis.writeToFiles().then(() => {\n\t\t\t\t\tresolve(id);\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\tlet list: InsightDataset[] = [];\n\t\tfor (const [key, value] of Object.entries(this.idAndDatasets)) {\n\t\t\tlist.push({\n\t\t\t\tid: key,\n\t\t\t\tkind: value.kind,\n\t\t\t\tnumRows: value.data.length\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(list);\n\t}\n\n\n\tprivate id_str: string = \"\";\n\t// private idAndDatasets: {[key: string]: Section[]} = {};\n\tprivate sections: Section[] = [];\n\tpublic loadFromDisk(){\n\t\tif(!fs.existsSync(\"./data/datasets.json\")){\n\t\t\treturn {};\n\t\t}\n\t\tlet diskJson = JSON.parse(fs.readFileSync(\"./data/datasets.json\").toString(\"utf-8\"));\n\t\tlet ret: {[key: string]: {kind: InsightDatasetKind, data: any[]}} = {};\n\t\tObject.keys(diskJson).forEach(function(key) {\n\t\t\t// each id is a key\n\t\t\tlet sectionList: Section[] = [];\n\t\t\tret[key] = {kind:InsightDatasetKind.Sections, data:[]};\n\t\t\tret[key].kind = diskJson[key].kind;\n\t\t\tfor (let r of diskJson[key].data){\n\t\t\t\tlet s = new Section(r[\"id\"].toString(), r[\"Course\"], r[\"Title\"], r[\"Professor\"], r[\"Subject\"],\n\t\t\t\t\tr[\"Year\"], r[\"Avg\"], r[\"Pass\"], r[\"Fail\"], r[\"Audit\"]);\n\t\t\t\tsectionList.push(s);\n\t\t\t}\n\t\t\tret[key].data = sectionList;\n\t\t});\n\t\t// parseSectionsFiles(filePromise: string[])\n\t\treturn ret;\n\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// console.log(this.idAndDatasets[\"id1\"]);\n\t\t//  return Promise.reject();\n\n\t\tlet root = this.querybuilder.parseQuery(query);\n\t\tconsole.log(this.id_str);\n\t\tconsole.log(this.idAndDatasets.toString());\n\t\tlet temp = this.idAndDatasets[this.querybuilder.getId()];\n\t\tif(temp === undefined){\n\t\t\tthrow new InsightError(\"Referenced dataset \" + this.querybuilder.getId() + \" not added yet\");\n\t\t}else{\n\t\t\tthis.sections = this.idAndDatasets[this.querybuilder.getId()].data;\n\t\t}\n\n\t\tlet result = this.answerQuery(root);\n\t\tconsole.log(result);\n\t\treturn Promise.resolve(result);\n\n\t}\n\tpublic answerQueryWhere(node: QueryTreeNode){\n\t\tconsole.log(97);\n\t\tif(node.hasChildren()){\n\t\t\tconsole.log(99);\n\t\t\t// haven't reached the leaves\n\t\t\tlet children = node.getChildren();\n\t\t\tlet sectionIndex: number[] = [];\n\t\t\tif(node.getKey() === \"AND\"){\n\t\t\t\tfor(let i = 0; i < node.getChildrenSize(); i++) {\n\t\t\t\t\t// find the same sections among all the children\n\t\t\t\t\tlet temp = this.answerQueryWhere(children[i]);\n\t\t\t\t\tconsole.log(node.getKey());\n\t\t\t\t\tif(sectionIndex.length === 0 && i === 0){\n\t\t\t\t\t\tsectionIndex.push(...temp);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// find the intersection\n\t\t\t\t\t\tsectionIndex = this.findDuplicate(sectionIndex,temp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(node.getKey() === \"OR\"){\n\t\t\t\tfor(let i = 0; i < node.getChildrenSize(); i++) {\n\t\t\t\t\t// add all sections among all children\n\t\t\t\t\tlet temp = this.answerQueryWhere(children[i]);\n\t\t\t\t\tconsole.log(117);\n\t\t\t\t\tif(sectionIndex.length === 0){\n\t\t\t\t\t\tsectionIndex.push(...temp);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// find the intersection\n\t\t\t\t\t\tsectionIndex = this.mergeNoDuplicate(sectionIndex,temp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(node.getKey() === \"NOT\"){\n\t\t\t\tconsole.log(node.getKey());\n\t\t\t\tif( node.getChildrenSize() === 1){\n\t\t\t\t\tlet arr1 = [...Array(this.sections.length).keys()];  // array = 0,1....length-1\n\t\t\t\t\tlet temp = this.answerQueryWhere(children[0]);\n\t\t\t\t\tsectionIndex = this.excludeArr(arr1,temp);\n\n\t\t\t\t}else{\n\t\t\t\t\tthrow new InsightError(\"127\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn sectionIndex;\n\t\t} else {\n\t\t\t// reach either a mkey or skey\n\t\t\tlet sectionIndex = this.answerQueryWhereBaseCase(node);\n\t\t\treturn sectionIndex;\n\t\t}\n\t}\n\n\n\tpublic answerQuery(node: QueryTreeNode){\n\t\tlet nodes =  node.getChildren();\n\t\tlet colIndex: number[] = [];\n\t\tlet res: InsightResult[] = [];\n\t\tfor(const n of nodes){\n\t\t\tif(n.getKey() === \"WHERE\"){\n\t\t\t\tcolIndex = this.answerQueryWhere(n.getChildren()[0]);\n\t\t\t\tconsole.log(\"colIndex: \" + colIndex.length);\n\t\t\t\tif(colIndex.length > 5000){\n\t\t\t\t\tthrow new ResultTooLargeError(\"The result is too big. Only queries with a maximum of 5000 \" +\n                        \"results are supported.\");\n\t\t\t\t}\n\t\t\t}else if(n.getKey() === \"OPTIONS\"){\n\t\t\t\tlet column = n.getChildren()[0].getValue();\n\t\t\t\tlet order = n.getChildren()[1].getValue();\n\t\t\t\tif(typeof order === \"object\"){\n\t\t\t\t\torder = order[0];\n\t\t\t\t}\n\t\t\t\tif(typeof column === \"string\" || typeof column === \"object\"){\n\t\t\t\t\tfor(let i of colIndex){\n\t\t\t\t\t\tres.push(this.sections[i].toJson(column, this.querybuilder.getId()));\n\t\t\t\t\t}\n\t\t\t\t\tres.sort((a: {[key: string]: any}, b: {[key: string]: any}) => a[\n\t\t\t\t\t\tthis.querybuilder.getId() + \"_\" + String(order)] > b[this.querybuilder.getId() + \"_\" +\n\t\t\t\t\tString(order)] ? 1 : -1);\n\t\t\t\t}else{\n\t\t\t\t\tthrow new InsightError(\"line 199\");\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthrow new InsightError(\"unknown key\");\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\tprivate answerQueryWhereBaseCase(node: QueryTreeNode) {\n\t\tlet sectionIndex: number[] = [];\n\t\tif (node.getKey() === \"IS\") {\n\t\t\tconsole.log(\"IS\");\n\t\t\tlet start: boolean = false;\n\t\t\tlet end: boolean = false;\n\t\t\tlet value: string = String(node.getValue());\n\t\t\tif(value === \"*\"){\n\t\t\t\tconsole.log(\"*\");\n\t\t\t\tsectionIndex = [...Array(this.sections.length).keys()];\n\t\t\t\treturn sectionIndex;\n\t\t\t}\n\t\t\tif(value.startsWith(\"*\")){\n\t\t\t\tconsole.log(\"*t\");\n\t\t\t\tvalue = value.substring(1);\n\t\t\t\tstart = true;\n\t\t\t}\n\t\t\tif(value.endsWith(\"*\")){\n\t\t\t\tconsole.log(\"t*\");\n\t\t\t\tvalue = value.substring(0, value.length - 1);\n\t\t\t\tend = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this.sections.length; i++) {\n\t\t\t\tsectionIndex = [...this.handleQueryIs(start, end, i, node, value, sectionIndex)];\n\t\t\t}\n\t\t} else {\n\t\t\tlet value = node.getKey();\n\t\t\tfor (let i = 0; i < this.sections.length; i++) {\n\t\t\t\tif (node.getKey() === \"EQ\") {\n\t\t\t\t\tif (this.sections[i].getValue(node.getChildrenString()[0]) === node.getValue()) {\n\t\t\t\t\t\tsectionIndex.push(i); // if a section matches, add its index\n\t\t\t\t\t}\n\t\t\t\t}else if (node.getKey() === \"GT\") {\n\t\t\t\t\tif (this.sections[i].getValue(node.getChildrenString()[0]) > Number(node.getValue())) {\n\t\t\t\t\t\tsectionIndex.push(i); // if a section matches, add its index\n\t\t\t\t\t}\n\t\t\t\t}else if (node.getKey() === \"LT\") {\n\t\t\t\t\tif (this.sections[i].getValue(node.getChildrenString()[0]) < Number(node.getValue())) {\n\t\t\t\t\t\tsectionIndex.push(i); // if a section matches, add its index\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sectionIndex;\n\t}\n\n\n\tprivate handleQueryIs(start: boolean, end: boolean, i: number, node: QueryTreeNode,\n\t\t\t\t\t\t  value: string, sectionIndex: number[]) {\n\t\tif (start && end) {\n\t\t\tif (String(this.sections[i].getValue(node.getChildrenString()[0])).includes(value)) {\n\t\t\t\tsectionIndex.push(i);\n\t\t\t}\n\t\t} else if (start) {\n\t\t\tif (String(this.sections[i].getValue(node.getChildrenString()[0])).endsWith(value)) {\n\t\t\t\tsectionIndex.push(i);\n\t\t\t}\n\t\t} else if (end) {\n\t\t\tif (String(this.sections[i].getValue(node.getChildrenString()[0])).startsWith(value)) {\n\t\t\t\tsectionIndex.push(i);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.sections[i].getValue(node.getChildrenString()[0]) === value) {\n\t\t\t\t// if a section matches, add its index\n\t\t\t\tsectionIndex.push(i);\n\t\t\t}\n\t\t}\n\t\treturn sectionIndex;\n\t}\n\n\tpublic findDuplicate(arr1: number[], arr2: number[]){\n\t\treturn arr1.filter((element) => arr2.includes(element));\n\t}\n\n\tpublic mergeNoDuplicate(arr1: number[], arr2: number[]){\n\t\tlet arr = [...arr1, ...arr2];\n\t\treturn [...new Set(arr)];\n\t}\n\n\tpublic excludeArr(arr1: number[], ar2: number[]){\n\t\tlet arr2 = new Set(ar2);\n\t\treturn arr1.filter( (x) => !arr2.has(x) );\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"217a4b8b623e26243b77e7f08e44233ea1161e73","contentHash":"be8f560225b4be2aeead9631dffcf36742ee36f2bded294a7cb2d772419e694a"},"/Users/ellenzhang/Desktop/project_team213/src/controller/DataSetHelper.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/DataSetHelper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":38}},"6":{"start":{"line":10,"column":20},"end":{"line":10,"column":109}},"7":{"start":{"line":12,"column":8},"end":{"line":29,"column":11}},"8":{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":94}},"10":{"start":{"line":17,"column":32},"end":{"line":17,"column":34}},"11":{"start":{"line":18,"column":12},"end":{"line":22,"column":15}},"12":{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},"13":{"start":{"line":20,"column":20},"end":{"line":20,"column":57}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":44}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":73}},"16":{"start":{"line":28,"column":12},"end":{"line":28,"column":52}},"17":{"start":{"line":32,"column":26},"end":{"line":32,"column":28}},"18":{"start":{"line":33,"column":8},"end":{"line":49,"column":9}},"19":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"20":{"start":{"line":35,"column":16},"end":{"line":35,"column":25}},"21":{"start":{"line":37,"column":24},"end":{"line":37,"column":37}},"22":{"start":{"line":38,"column":26},"end":{"line":38,"column":41}},"23":{"start":{"line":39,"column":12},"end":{"line":48,"column":13}},"24":{"start":{"line":40,"column":35},"end":{"line":42,"column":35}},"25":{"start":{"line":43,"column":16},"end":{"line":47,"column":17}},"26":{"start":{"line":44,"column":33},"end":{"line":44,"column":86}},"27":{"start":{"line":45,"column":28},"end":{"line":45,"column":174}},"28":{"start":{"line":46,"column":20},"end":{"line":46,"column":40}},"29":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"30":{"start":{"line":51,"column":12},"end":{"line":51,"column":91}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"32":{"start":{"line":56,"column":0},"end":{"line":56,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":38},"end":{"line":30,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":18},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":34},"end":{"line":24,"column":9}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":31},"end":{"line":18,"column":32}},"loc":{"start":{"line":18,"column":47},"end":{"line":22,"column":13}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":18},"end":{"line":25,"column":19}},"loc":{"start":{"line":25,"column":35},"end":{"line":27,"column":9}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":17},"end":{"line":27,"column":18}},"loc":{"start":{"line":27,"column":28},"end":{"line":29,"column":9}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":43},"end":{"line":54,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},"type":"if","locations":[{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},{"start":{"line":14,"column":12},"end":{"line":16,"column":13}}],"line":14},"4":{"loc":{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},"type":"if","locations":[{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},{"start":{"line":19,"column":16},"end":{"line":21,"column":17}}],"line":19},"5":{"loc":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},{"start":{"line":34,"column":12},"end":{"line":36,"column":13}}],"line":34},"6":{"loc":{"start":{"line":40,"column":35},"end":{"line":42,"column":35}},"type":"binary-expr","locations":[{"start":{"line":40,"column":35},"end":{"line":40,"column":44}},{"start":{"line":40,"column":48},"end":{"line":40,"column":61}},{"start":{"line":40,"column":65},"end":{"line":40,"column":77}},{"start":{"line":41,"column":23},"end":{"line":41,"column":39}},{"start":{"line":41,"column":43},"end":{"line":41,"column":57}},{"start":{"line":41,"column":61},"end":{"line":41,"column":71}},{"start":{"line":41,"column":75},"end":{"line":41,"column":86}},{"start":{"line":41,"column":90},"end":{"line":41,"column":101}},{"start":{"line":42,"column":23},"end":{"line":42,"column":35}}],"line":40},"7":{"loc":{"start":{"line":43,"column":16},"end":{"line":47,"column":17}},"type":"if","locations":[{"start":{"line":43,"column":16},"end":{"line":47,"column":17}},{"start":{"line":43,"column":16},"end":{"line":47,"column":17}}],"line":43},"8":{"loc":{"start":{"line":44,"column":33},"end":{"line":44,"column":86}},"type":"cond-expr","locations":[{"start":{"line":44,"column":62},"end":{"line":44,"column":66}},{"start":{"line":44,"column":69},"end":{"line":44,"column":86}}],"line":44},"9":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{"line":50,"column":8},"end":{"line":52,"column":9}}],"line":50}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":5945,"13":5945,"14":1,"15":1,"16":0,"17":1,"18":1,"19":5945,"20":1,"21":5944,"22":5944,"23":5944,"24":64612,"25":64612,"26":64612,"27":64612,"28":64612,"29":1,"30":0,"31":1,"32":1},"f":{"0":1,"1":1,"2":1,"3":5945,"4":1,"5":0,"6":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,1],"4":[5945,0],"5":[1,5944],"6":[64612,64612,64612,64612,64612,64612,64612,64612,64612],"7":[64612,0],"8":[24621,39991],"9":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/DataSetHelper.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/DataSetHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport {Section} from \"./Section\";\n\nexport default class DataSetHelper {\n\tpublic static course: string[] = [\"id\",\"Course\",\"Title\",\"Professor\",\"Subject\",\"Year\",\"Avg\",\"Pass\",\"Fail\",\"Audit\"];\n\tpublic static addSectionDataset(content: string): Promise<Section[]> {\n\t\treturn JSZip.loadAsync(content, {base64:true})\n\t\t\t.then((contentZip) => {\n\t\t\t\tif (contentZip.folder(/courses/).length === 0) {\n\t\t\t\t\tthrow new InsightError(\"No valid section files in courses.\");\n\t\t\t\t}\n\t\t\t\tconst filePromise: Array<Promise<string>> = [];\n\t\t\t\tcontentZip.forEach((path,file)=> {\n\t\t\t\t\tif(path.startsWith(\"courses/\")) {\n\t\t\t\t\t\tfilePromise.push(file.async(\"text\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn Promise.all(filePromise);\n\t\t\t})\n\t\t\t.then((filePromise) => {\n\t\t\t\treturn Promise.resolve(this.parseSectionsFiles(filePromise));\n\t\t\t}).catch((error) => {\n\t\t\t\treturn Promise.reject(\"Invalid files.\");\n\t\t\t});\n\t}\n\n\tprivate static parseSectionsFiles(filePromise: string[]) {\n\t\tlet sectionList: Section[] = [];\n\t\tfor (let f of filePromise) {\n\t\t\tif (f === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet jsonF = JSON.parse(f);\n\t\t\tlet results = jsonF[\"result\"];\n\t\t\tfor (let r of results) {\n\t\t\t\tconst containAll: boolean = \"id\" in r && \"Course\" in r && \"Title\" in r\n\t\t\t\t\t&& \"Professor\" in r && \"Subject\" in r && \"Avg\" in r && \"Pass\" in r && \"Fail\" in r\n\t\t\t\t\t&& \"Audit\" in r;\n\t\t\t\tif (containAll) {\n\t\t\t\t\tconst year = r[\"Section\"] === \"overall\" ?  1900 : Number(r[\"Year\"]);\n\t\t\t\t\tlet s = new Section(r[\"id\"].toString(), r[\"Course\"], r[\"Title\"], r[\"Professor\"], r[\"Subject\"],\n\t\t\t\t\t\tyear, r[\"Avg\"], r[\"Pass\"], r[\"Fail\"], r[\"Audit\"]);\n\t\t\t\t\tsectionList.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (sectionList.length === 0) {\n\t\t\tthrow new InsightError(\"There is no courses in this folder!\");\n\t\t}\n\t\treturn sectionList;\n\t}\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8c45c3ca813d859f94890f8fbe9e2dda59480d92","contentHash":"43c7396e7946fa3c5166f1bbe2fc7efc2052dc55e03f16adc47d5f8fc4313a85"},"/Users/ellenzhang/Desktop/project_team213/src/controller/Section.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":27}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":37}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":27}},"13":{"start":{"line":29,"column":8},"end":{"line":61,"column":9}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"15":{"start":{"line":32,"column":13},"end":{"line":61,"column":9}},"16":{"start":{"line":33,"column":12},"end":{"line":33,"column":27}},"17":{"start":{"line":35,"column":13},"end":{"line":61,"column":9}},"18":{"start":{"line":36,"column":12},"end":{"line":36,"column":30}},"19":{"start":{"line":38,"column":13},"end":{"line":61,"column":9}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":35}},"21":{"start":{"line":41,"column":13},"end":{"line":61,"column":9}},"22":{"start":{"line":42,"column":12},"end":{"line":42,"column":29}},"23":{"start":{"line":44,"column":13},"end":{"line":61,"column":9}},"24":{"start":{"line":45,"column":12},"end":{"line":45,"column":29}},"25":{"start":{"line":47,"column":13},"end":{"line":61,"column":9}},"26":{"start":{"line":48,"column":12},"end":{"line":48,"column":28}},"27":{"start":{"line":50,"column":13},"end":{"line":61,"column":9}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":29}},"29":{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":29}},"31":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":30}},"33":{"start":{"line":60,"column":12},"end":{"line":60,"column":54}},"34":{"start":{"line":64,"column":8},"end":{"line":91,"column":9}},"35":{"start":{"line":65,"column":22},"end":{"line":65,"column":24}},"36":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"37":{"start":{"line":67,"column":16},"end":{"line":67,"column":53}},"38":{"start":{"line":69,"column":12},"end":{"line":69,"column":23}},"39":{"start":{"line":71,"column":13},"end":{"line":91,"column":9}},"40":{"start":{"line":72,"column":23},"end":{"line":72,"column":41}},"41":{"start":{"line":73,"column":12},"end":{"line":75,"column":14}},"42":{"start":{"line":78,"column":22},"end":{"line":78,"column":24}},"43":{"start":{"line":79,"column":23},"end":{"line":79,"column":31}},"44":{"start":{"line":80,"column":12},"end":{"line":80,"column":43}},"45":{"start":{"line":81,"column":12},"end":{"line":81,"column":39}},"46":{"start":{"line":82,"column":12},"end":{"line":82,"column":45}},"47":{"start":{"line":83,"column":12},"end":{"line":83,"column":55}},"48":{"start":{"line":84,"column":12},"end":{"line":84,"column":43}},"49":{"start":{"line":85,"column":12},"end":{"line":85,"column":43}},"50":{"start":{"line":86,"column":12},"end":{"line":86,"column":41}},"51":{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},"52":{"start":{"line":88,"column":12},"end":{"line":88,"column":43}},"53":{"start":{"line":89,"column":12},"end":{"line":89,"column":45}},"54":{"start":{"line":90,"column":12},"end":{"line":90,"column":23}},"55":{"start":{"line":94,"column":0},"end":{"line":94,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":81},"end":{"line":27,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":62,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":24},"end":{"line":92,"column":5}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":61,"column":9}},{"start":{"line":29,"column":8},"end":{"line":61,"column":9}}],"line":29},"1":{"loc":{"start":{"line":32,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":13},"end":{"line":61,"column":9}},{"start":{"line":32,"column":13},"end":{"line":61,"column":9}}],"line":32},"2":{"loc":{"start":{"line":35,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":61,"column":9}},{"start":{"line":35,"column":13},"end":{"line":61,"column":9}}],"line":35},"3":{"loc":{"start":{"line":38,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":61,"column":9}},{"start":{"line":38,"column":13},"end":{"line":61,"column":9}}],"line":38},"4":{"loc":{"start":{"line":41,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":13},"end":{"line":61,"column":9}},{"start":{"line":41,"column":13},"end":{"line":61,"column":9}}],"line":41},"5":{"loc":{"start":{"line":44,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":61,"column":9}},{"start":{"line":44,"column":13},"end":{"line":61,"column":9}}],"line":44},"6":{"loc":{"start":{"line":47,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":61,"column":9}},{"start":{"line":47,"column":13},"end":{"line":61,"column":9}}],"line":47},"7":{"loc":{"start":{"line":50,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":13},"end":{"line":61,"column":9}},{"start":{"line":50,"column":13},"end":{"line":61,"column":9}}],"line":50},"8":{"loc":{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":61,"column":9}},{"start":{"line":53,"column":13},"end":{"line":61,"column":9}}],"line":53},"9":{"loc":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},{"start":{"line":56,"column":13},"end":{"line":61,"column":9}}],"line":56},"10":{"loc":{"start":{"line":64,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":91,"column":9}},{"start":{"line":64,"column":8},"end":{"line":91,"column":9}}],"line":64},"11":{"loc":{"start":{"line":71,"column":13},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":13},"end":{"line":91,"column":9}},{"start":{"line":71,"column":13},"end":{"line":91,"column":9}}],"line":71}},"s":{"0":1,"1":1,"2":1,"3":64612,"4":64612,"5":64612,"6":64612,"7":64612,"8":64612,"9":64612,"10":64612,"11":64612,"12":64612,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"f":{"0":64612,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/Section.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/Section.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\n\nexport class Section {\n\tprivate uuid: string;\n\tprivate id: string;\n\tprivate title: string;\n\tprivate instructor: string;\n\tprivate dept: string;\n\tprivate year: number;\n\tprivate avg: number;\n\tprivate pass: number;\n\tprivate fail: number;\n\tprivate audit: number;\n\n\tconstructor(uuid: string, id: string, title: string,instructor: string, dept: string, year: number,\n\t\tavg: number, pass: number, fail: number, audit: number){\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\tpublic getValue(key: string){\n\t\tif(key === \"uuid\"){\n\t\t\treturn this.uuid;\n\t\t}else if(key === \"id\"){\n\t\t\treturn this.id;\n\t\t}else if(key === \"title\"){\n\t\t\treturn this.title;\n\t\t}else if(key === \"instructor\"){\n\t\t\treturn this.instructor;\n\t\t}else if(key === \"dept\"){\n\t\t\treturn this.dept;\n\t\t}else if(key === \"year\"){\n\t\t\treturn this.year;\n\t\t}else if(key === \"avg\"){\n\t\t\treturn this.avg;\n\t\t}else if(key === \"pass\"){\n\t\t\treturn this.pass;\n\t\t}else if(key === \"fail\"){\n\t\t\treturn this.fail;\n\t\t}else if(key === \"audit\"){\n\t\t\treturn this.audit;\n\t\t}else{\n\t\t\tthrow new InsightError();\n\t\t}\n\t}\n\n\n\tpublic toJson(keylist: string|string[]|undefined, id: string){\n\t\tif (typeof keylist === \"object\"){\n\t\t\tlet ret: {[key: string]: string|number;} = {};\n\t\t\tfor(let i of keylist){\n\t\t\t\tret[id + \"_\"  + i] = this.getValue(i);\n\t\t\t}\n\t\t\treturn ret;\n\n\t\t}else if(typeof keylist === \"string\"){\n\t\t\tlet temp = id + \"_\"  + keylist;\n\t\t\treturn{\n\t\t\t\ttemp:  this.getValue(keylist)\n\t\t\t};\n\t\t}else{\n\t\t\tlet ret: {[key: string]: string|number;} = {};\n\t\t\tlet pref = id + \"_\";\n\t\t\tret[pref + \"uuid\"] = this.uuid;\n\t\t\tret[pref + \"id\"] = this.id;\n\t\t\tret[pref + \"title\"] = this.title;\n\t\t\tret[pref + \"instructor\"] = this.instructor;\n\t\t\tret[pref + \"dept\"] = this.dept;\n\t\t\tret[pref + \"year\"] = this.year;\n\t\t\tret[pref + \"avg\"] = this.avg;\n\t\t\tret[pref + \"pass\"] = this.pass;\n\t\t\tret[pref + \"fail\"] = this.fail;\n\t\t\tret[pref + \"audit\"] = this.audit;\n\t\t\treturn ret;\n\n\t\t}\n\n\t}\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2db6127d906f3c083da3aad202ed41c1dbabf18b","contentHash":"ef0541c00e32c95fb88226117baa0e7bc914878e6646ebd9ea0bd2c7d29ce00a"},"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryBuilder.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryBuilder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":26}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":24}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":15}},"8":{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":45}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":54}},"11":{"start":{"line":17,"column":8},"end":{"line":24,"column":9}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":55}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":32}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":56}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":76}},"16":{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":47}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":54}},"19":{"start":{"line":29,"column":19},"end":{"line":29,"column":71}},"20":{"start":{"line":30,"column":20},"end":{"line":30,"column":73}},"21":{"start":{"line":31,"column":22},"end":{"line":31,"column":77}},"22":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":34}},"24":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":56}},"26":{"start":{"line":36,"column":12},"end":{"line":36,"column":54}},"27":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"28":{"start":{"line":39,"column":12},"end":{"line":39,"column":65}},"29":{"start":{"line":40,"column":12},"end":{"line":40,"column":54}},"30":{"start":{"line":42,"column":8},"end":{"line":42,"column":46}},"31":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"32":{"start":{"line":44,"column":12},"end":{"line":44,"column":59}},"33":{"start":{"line":45,"column":12},"end":{"line":45,"column":54}},"34":{"start":{"line":47,"column":8},"end":{"line":47,"column":98}},"35":{"start":{"line":48,"column":8},"end":{"line":48,"column":37}},"36":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"37":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"38":{"start":{"line":53,"column":12},"end":{"line":53,"column":87}},"39":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"40":{"start":{"line":57,"column":12},"end":{"line":57,"column":50}},"41":{"start":{"line":58,"column":12},"end":{"line":58,"column":19}},"42":{"start":{"line":60,"column":8},"end":{"line":94,"column":9}},"43":{"start":{"line":61,"column":12},"end":{"line":93,"column":13}},"44":{"start":{"line":62,"column":28},"end":{"line":62,"column":38}},"45":{"start":{"line":63,"column":16},"end":{"line":65,"column":17}},"46":{"start":{"line":64,"column":20},"end":{"line":64,"column":111}},"47":{"start":{"line":66,"column":16},"end":{"line":66,"column":73}},"48":{"start":{"line":67,"column":16},"end":{"line":67,"column":39}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":46}},"50":{"start":{"line":70,"column":17},"end":{"line":93,"column":13}},"51":{"start":{"line":71,"column":28},"end":{"line":71,"column":38}},"52":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"53":{"start":{"line":73,"column":20},"end":{"line":73,"column":98}},"54":{"start":{"line":75,"column":16},"end":{"line":75,"column":73}},"55":{"start":{"line":76,"column":16},"end":{"line":76,"column":39}},"56":{"start":{"line":77,"column":28},"end":{"line":77,"column":52}},"57":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"58":{"start":{"line":78,"column":29},"end":{"line":78,"column":30}},"59":{"start":{"line":79,"column":20},"end":{"line":79,"column":53}},"60":{"start":{"line":82,"column":17},"end":{"line":93,"column":13}},"61":{"start":{"line":83,"column":28},"end":{"line":83,"column":38}},"62":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"63":{"start":{"line":85,"column":20},"end":{"line":85,"column":91}},"64":{"start":{"line":87,"column":16},"end":{"line":87,"column":73}},"65":{"start":{"line":88,"column":16},"end":{"line":88,"column":39}},"66":{"start":{"line":89,"column":16},"end":{"line":89,"column":46}},"67":{"start":{"line":92,"column":16},"end":{"line":92,"column":87}},"68":{"start":{"line":97,"column":18},"end":{"line":97,"column":39}},"69":{"start":{"line":98,"column":20},"end":{"line":98,"column":30}},"70":{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},"71":{"start":{"line":101,"column":12},"end":{"line":101,"column":68}},"72":{"start":{"line":104,"column":12},"end":{"line":104,"column":68}},"73":{"start":{"line":106,"column":8},"end":{"line":106,"column":29}},"74":{"start":{"line":107,"column":8},"end":{"line":107,"column":40}},"75":{"start":{"line":110,"column":8},"end":{"line":114,"column":9}},"76":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"77":{"start":{"line":112,"column":16},"end":{"line":112,"column":83}},"78":{"start":{"line":116,"column":8},"end":{"line":133,"column":9}},"79":{"start":{"line":117,"column":12},"end":{"line":117,"column":60}},"80":{"start":{"line":118,"column":12},"end":{"line":118,"column":54}},"81":{"start":{"line":121,"column":12},"end":{"line":125,"column":13}},"82":{"start":{"line":122,"column":16},"end":{"line":122,"column":37}},"83":{"start":{"line":123,"column":16},"end":{"line":123,"column":75}},"84":{"start":{"line":124,"column":16},"end":{"line":124,"column":58}},"85":{"start":{"line":126,"column":25},"end":{"line":126,"column":27}},"86":{"start":{"line":127,"column":12},"end":{"line":130,"column":13}},"87":{"start":{"line":128,"column":30},"end":{"line":128,"column":84}},"88":{"start":{"line":129,"column":16},"end":{"line":129,"column":37}},"89":{"start":{"line":131,"column":12},"end":{"line":131,"column":72}},"90":{"start":{"line":132,"column":12},"end":{"line":132,"column":35}},"91":{"start":{"line":134,"column":8},"end":{"line":155,"column":9}},"92":{"start":{"line":135,"column":12},"end":{"line":154,"column":13}},"93":{"start":{"line":136,"column":16},"end":{"line":136,"column":60}},"94":{"start":{"line":137,"column":16},"end":{"line":137,"column":58}},"95":{"start":{"line":140,"column":16},"end":{"line":143,"column":17}},"96":{"start":{"line":141,"column":20},"end":{"line":141,"column":74}},"97":{"start":{"line":142,"column":20},"end":{"line":142,"column":62}},"98":{"start":{"line":144,"column":28},"end":{"line":144,"column":53}},"99":{"start":{"line":146,"column":16},"end":{"line":153,"column":17}},"100":{"start":{"line":147,"column":20},"end":{"line":147,"column":86}},"101":{"start":{"line":150,"column":20},"end":{"line":150,"column":61}},"102":{"start":{"line":151,"column":20},"end":{"line":151,"column":75}},"103":{"start":{"line":152,"column":20},"end":{"line":152,"column":43}},"104":{"start":{"line":158,"column":20},"end":{"line":158,"column":35}},"105":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"106":{"start":{"line":160,"column":12},"end":{"line":160,"column":76}},"107":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"108":{"start":{"line":163,"column":12},"end":{"line":163,"column":85}},"109":{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},"110":{"start":{"line":166,"column":12},"end":{"line":166,"column":50}},"111":{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},"112":{"start":{"line":169,"column":12},"end":{"line":169,"column":79}},"113":{"start":{"line":171,"column":8},"end":{"line":171,"column":39}},"114":{"start":{"line":172,"column":8},"end":{"line":209,"column":9}},"115":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"116":{"start":{"line":174,"column":16},"end":{"line":174,"column":76}},"117":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"118":{"start":{"line":177,"column":16},"end":{"line":177,"column":78}},"119":{"start":{"line":180,"column":13},"end":{"line":209,"column":9}},"120":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"121":{"start":{"line":182,"column":16},"end":{"line":182,"column":76}},"122":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"123":{"start":{"line":185,"column":16},"end":{"line":185,"column":78}},"124":{"start":{"line":187,"column":12},"end":{"line":204,"column":13}},"125":{"start":{"line":188,"column":26},"end":{"line":188,"column":53}},"126":{"start":{"line":189,"column":16},"end":{"line":203,"column":17}},"127":{"start":{"line":190,"column":20},"end":{"line":190,"column":135}},"128":{"start":{"line":192,"column":21},"end":{"line":203,"column":17}},"129":{"start":{"line":193,"column":20},"end":{"line":196,"column":21}},"130":{"start":{"line":194,"column":24},"end":{"line":195,"column":48}},"131":{"start":{"line":198,"column":21},"end":{"line":203,"column":17}},"132":{"start":{"line":199,"column":20},"end":{"line":202,"column":21}},"133":{"start":{"line":200,"column":24},"end":{"line":201,"column":48}},"134":{"start":{"line":207,"column":12},"end":{"line":207,"column":39}},"135":{"start":{"line":208,"column":12},"end":{"line":208,"column":67}},"136":{"start":{"line":210,"column":8},"end":{"line":210,"column":19}},"137":{"start":{"line":213,"column":8},"end":{"line":213,"column":27}},"138":{"start":{"line":216,"column":0},"end":{"line":216,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":22},"end":{"line":50,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":29},"end":{"line":95,"column":5}},"line":51},"2":{"name":"(anonymous_2)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":37},"end":{"line":108,"column":5}},"line":96},"3":{"name":"(anonymous_3)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":49},"end":{"line":156,"column":5}},"line":109},"4":{"name":"(anonymous_4)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":36},"end":{"line":211,"column":5}},"line":157},"5":{"name":"(anonymous_5)","decl":{"start":{"line":212,"column":4},"end":{"line":212,"column":5}},"loc":{"start":{"line":212,"column":12},"end":{"line":214,"column":5}},"line":212}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},{"start":{"line":12,"column":8},"end":{"line":15,"column":9}}],"line":12},"1":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":78}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":26}},{"start":{"line":12,"column":30},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":78}}],"line":12},"2":{"loc":{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},{"start":{"line":25,"column":8},"end":{"line":28,"column":9}}],"line":25},"3":{"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":94}},"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":32}},{"start":{"line":25,"column":36},"end":{"line":25,"column":62}},{"start":{"line":25,"column":66},"end":{"line":25,"column":94}}],"line":25},"4":{"loc":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},{"start":{"line":34,"column":8},"end":{"line":37,"column":9}}],"line":34},"5":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":77}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":44}},{"start":{"line":34,"column":48},"end":{"line":34,"column":77}}],"line":34},"6":{"loc":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},{"start":{"line":38,"column":8},"end":{"line":41,"column":9}}],"line":38},"7":{"loc":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},{"start":{"line":43,"column":8},"end":{"line":46,"column":9}}],"line":43},"8":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":81}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":46}},{"start":{"line":43,"column":50},"end":{"line":43,"column":81}}],"line":43},"9":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"10":{"loc":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},{"start":{"line":56,"column":8},"end":{"line":59,"column":9}}],"line":56},"11":{"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":86}},"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":47}},{"start":{"line":56,"column":51},"end":{"line":56,"column":86}}],"line":56},"12":{"loc":{"start":{"line":61,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":93,"column":13}},{"start":{"line":61,"column":12},"end":{"line":93,"column":13}}],"line":61},"13":{"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":70}},"type":"binary-expr","locations":[{"start":{"line":61,"column":16},"end":{"line":61,"column":41}},{"start":{"line":61,"column":45},"end":{"line":61,"column":70}}],"line":61},"14":{"loc":{"start":{"line":63,"column":16},"end":{"line":65,"column":17}},"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":65,"column":17}},{"start":{"line":63,"column":16},"end":{"line":65,"column":17}}],"line":63},"15":{"loc":{"start":{"line":70,"column":17},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":17},"end":{"line":93,"column":13}},{"start":{"line":70,"column":17},"end":{"line":93,"column":13}}],"line":70},"16":{"loc":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},{"start":{"line":72,"column":16},"end":{"line":74,"column":17}}],"line":72},"17":{"loc":{"start":{"line":72,"column":20},"end":{"line":72,"column":73}},"type":"binary-expr","locations":[{"start":{"line":72,"column":20},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":73}}],"line":72},"18":{"loc":{"start":{"line":82,"column":17},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":17},"end":{"line":93,"column":13}},{"start":{"line":82,"column":17},"end":{"line":93,"column":13}}],"line":82},"19":{"loc":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"type":"if","locations":[{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},{"start":{"line":84,"column":16},"end":{"line":86,"column":17}}],"line":84},"20":{"loc":{"start":{"line":84,"column":20},"end":{"line":84,"column":69}},"type":"binary-expr","locations":[{"start":{"line":84,"column":20},"end":{"line":84,"column":45}},{"start":{"line":84,"column":49},"end":{"line":84,"column":69}}],"line":84},"21":{"loc":{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":105,"column":9}},{"start":{"line":100,"column":8},"end":{"line":105,"column":9}}],"line":100},"22":{"loc":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},{"start":{"line":111,"column":12},"end":{"line":113,"column":13}}],"line":111},"23":{"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":52}},"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":33}},{"start":{"line":111,"column":37},"end":{"line":111,"column":52}}],"line":111},"24":{"loc":{"start":{"line":116,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":133,"column":9}},{"start":{"line":116,"column":8},"end":{"line":133,"column":9}}],"line":116},"25":{"loc":{"start":{"line":121,"column":12},"end":{"line":125,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":125,"column":13}},{"start":{"line":121,"column":12},"end":{"line":125,"column":13}}],"line":121},"26":{"loc":{"start":{"line":121,"column":16},"end":{"line":121,"column":75}},"type":"binary-expr","locations":[{"start":{"line":121,"column":16},"end":{"line":121,"column":39}},{"start":{"line":121,"column":43},"end":{"line":121,"column":75}}],"line":121},"27":{"loc":{"start":{"line":134,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":155,"column":9}},{"start":{"line":134,"column":8},"end":{"line":155,"column":9}}],"line":134},"28":{"loc":{"start":{"line":135,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":154,"column":13}},{"start":{"line":135,"column":12},"end":{"line":154,"column":13}}],"line":135},"29":{"loc":{"start":{"line":140,"column":16},"end":{"line":143,"column":17}},"type":"if","locations":[{"start":{"line":140,"column":16},"end":{"line":143,"column":17}},{"start":{"line":140,"column":16},"end":{"line":143,"column":17}}],"line":140},"30":{"loc":{"start":{"line":146,"column":16},"end":{"line":153,"column":17}},"type":"if","locations":[{"start":{"line":146,"column":16},"end":{"line":153,"column":17}},{"start":{"line":146,"column":16},"end":{"line":153,"column":17}}],"line":146},"31":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"32":{"loc":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},{"start":{"line":162,"column":8},"end":{"line":164,"column":9}}],"line":162},"33":{"loc":{"start":{"line":162,"column":13},"end":{"line":162,"column":34}},"type":"binary-expr","locations":[{"start":{"line":162,"column":13},"end":{"line":162,"column":28}},{"start":{"line":162,"column":32},"end":{"line":162,"column":34}}],"line":162},"34":{"loc":{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},{"start":{"line":165,"column":8},"end":{"line":170,"column":9}}],"line":165},"35":{"loc":{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},{"start":{"line":168,"column":13},"end":{"line":170,"column":9}}],"line":168},"36":{"loc":{"start":{"line":172,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":209,"column":9}},{"start":{"line":172,"column":8},"end":{"line":209,"column":9}}],"line":172},"37":{"loc":{"start":{"line":172,"column":12},"end":{"line":172,"column":98}},"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":25}},{"start":{"line":172,"column":29},"end":{"line":172,"column":43}},{"start":{"line":172,"column":47},"end":{"line":172,"column":61}},{"start":{"line":172,"column":65},"end":{"line":172,"column":80}},{"start":{"line":172,"column":84},"end":{"line":172,"column":98}}],"line":172},"38":{"loc":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},{"start":{"line":173,"column":12},"end":{"line":175,"column":13}}],"line":173},"39":{"loc":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},{"start":{"line":176,"column":12},"end":{"line":178,"column":13}}],"line":176},"40":{"loc":{"start":{"line":180,"column":13},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":13},"end":{"line":209,"column":9}},{"start":{"line":180,"column":13},"end":{"line":209,"column":9}}],"line":180},"41":{"loc":{"start":{"line":180,"column":17},"end":{"line":180,"column":108}},"type":"binary-expr","locations":[{"start":{"line":180,"column":17},"end":{"line":180,"column":31}},{"start":{"line":180,"column":35},"end":{"line":180,"column":47}},{"start":{"line":180,"column":51},"end":{"line":180,"column":71}},{"start":{"line":180,"column":75},"end":{"line":180,"column":90}},{"start":{"line":180,"column":94},"end":{"line":180,"column":108}}],"line":180},"42":{"loc":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"type":"if","locations":[{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},{"start":{"line":181,"column":12},"end":{"line":183,"column":13}}],"line":181},"43":{"loc":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},{"start":{"line":184,"column":12},"end":{"line":186,"column":13}}],"line":184},"44":{"loc":{"start":{"line":187,"column":12},"end":{"line":204,"column":13}},"type":"if","locations":[{"start":{"line":187,"column":12},"end":{"line":204,"column":13}},{"start":{"line":187,"column":12},"end":{"line":204,"column":13}}],"line":187},"45":{"loc":{"start":{"line":189,"column":16},"end":{"line":203,"column":17}},"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":203,"column":17}},{"start":{"line":189,"column":16},"end":{"line":203,"column":17}}],"line":189},"46":{"loc":{"start":{"line":192,"column":21},"end":{"line":203,"column":17}},"type":"if","locations":[{"start":{"line":192,"column":21},"end":{"line":203,"column":17}},{"start":{"line":192,"column":21},"end":{"line":203,"column":17}}],"line":192},"47":{"loc":{"start":{"line":193,"column":20},"end":{"line":196,"column":21}},"type":"if","locations":[{"start":{"line":193,"column":20},"end":{"line":196,"column":21}},{"start":{"line":193,"column":20},"end":{"line":196,"column":21}}],"line":193},"48":{"loc":{"start":{"line":193,"column":24},"end":{"line":193,"column":75}},"type":"binary-expr","locations":[{"start":{"line":193,"column":24},"end":{"line":193,"column":40}},{"start":{"line":193,"column":44},"end":{"line":193,"column":75}}],"line":193},"49":{"loc":{"start":{"line":198,"column":21},"end":{"line":203,"column":17}},"type":"if","locations":[{"start":{"line":198,"column":21},"end":{"line":203,"column":17}},{"start":{"line":198,"column":21},"end":{"line":203,"column":17}}],"line":198},"50":{"loc":{"start":{"line":199,"column":20},"end":{"line":202,"column":21}},"type":"if","locations":[{"start":{"line":199,"column":20},"end":{"line":202,"column":21}},{"start":{"line":199,"column":20},"end":{"line":202,"column":21}}],"line":199},"51":{"loc":{"start":{"line":199,"column":24},"end":{"line":199,"column":75}},"type":"binary-expr","locations":[{"start":{"line":199,"column":24},"end":{"line":199,"column":40}},{"start":{"line":199,"column":44},"end":{"line":199,"column":75}}],"line":199}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryBuilder.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/QueryBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\nimport {QueryTreeNode} from \"./QueryTreeNode\";\n\n\nconst Logic = [\"AND\", \"OR\"];\nconst Mcomparator = [\"LT\", \"GT\", \"EQ\"];\nconst Scomparator = [\"IS\"];\nconst Negation = [\"NOT\"];\nexport default class QueryBuilder{\n\n\tprivate id_str: string = \"\";\n\tpublic parseQuery(query: unknown) {\n        // check if query is a valid query\n\t\tif(query === null || query === undefined || typeof query !== \"object\" ) {\n\t\t\tconsole.log(\"line 65 arg error\");\n\t\t\tthrow new InsightError();\n\t\t}\n\t\tlet parsed;\n\n\t\ttry{\n\t\t\tparsed = JSON.parse(JSON.stringify(query));\n\t\t\tconsole.log(parsed);\n\t\t}catch(err){\n\t\t\tconsole.log(\"line 74 invalid query string\");\n\t\t\tthrow new InsightError(\"invalid query string\");\n\t\t}\n\n\t\tif(parsed === undefined || parsed.WHERE === undefined || parsed.OPTIONS === undefined){\n\t\t\tconsole.log(\"line 79 query error\");\n\t\t\tthrow new InsightError();\n\t\t}\n\t\tlet root = new QueryTreeNode(\"ROOT\", undefined);\n\t\tlet where = new QueryTreeNode(\"WHERE\", undefined);\n\t\tlet options = new QueryTreeNode(\"OPTIONS\", undefined);\n\t\troot.addChildren(where);\n\t\troot.addChildren(options);\n\t\tif(typeof parsed.WHERE !== \"object\" || parsed.WHERE instanceof Array){\n\t\t\tconsole.log(\"line 90 WHERE must be object\");\n\t\t\tthrow new InsightError();\n\t\t}\n\n        // WHERE should only have 1 key\n\t\tif(Object.keys(parsed.WHERE).length > 1){\n\t\t\tconsole.log(\"line 96 WHERE should only have 1 key \");\n\t\t\tthrow new InsightError();\n\t\t}\n\n\t\tthis.handleWhere(parsed.WHERE, where);\n\n\t\tif(typeof parsed.OPTIONS !== \"object\" || parsed.OPTIONS instanceof Array){\n\t\t\tconsole.log(\"line 103 OPTIONS must be object\");\n\t\t\tthrow new InsightError();\n\t\t}\n\t\tthis.handleOptions(parsed.OPTIONS, parsed.OPTIONS.COLUMNS, parsed.OPTIONS.ORDER, options);\n\n\t\tconsole.log(root.toString());\n        // console.log(parsed.OPTIONS.COLUMNS);\n\n\t\treturn root;\n\n\t}\n\n\n\tpublic handleWhere(query: object, root: QueryTreeNode){\n\t\tif(Object.keys(query).length === 0) {\n\t\t\tthrow new InsightError(root.getKey() + \" must be object\");\n\t\t}\n\t\tlet temp;\n\t\tif(Mcomparator.includes(root.getKey()) || Scomparator.includes(root.getKey())){\n            // means we reach the bottom level of the tree\n\t\t\tthis.handleWhereBaseCase(query, root);\n\t\t\treturn;\n\t\t}\n\t\tfor(let key in query){\n\t\t\tif(Mcomparator.includes(key) || Scomparator.includes(key)){\n                // should only have 1 key\n\t\t\t\tlet value = query[key as keyof typeof query];\n\t\t\t\tif(Object.keys(value).length !== 1){\n\t\t\t\t\tthrow new InsightError(\"line 138 mcomp and scomp should only have 1 key\");\n\t\t\t\t}\n\t\t\t\ttemp = new QueryTreeNode(key, undefined);\n\t\t\t\troot.addChildren(temp);\n\t\t\t\tthis.handleWhere(value,temp);\n\t\t\t}else if(Logic.includes(key)){\n\t\t\t\tlet value = query[key as keyof typeof query];\n\t\t\t\tif(!Array.isArray(value) || Array.from(value).length < 1){\n\t\t\t\t\tthrow new InsightError(\"line 147 must be a non-empty array\");\n\t\t\t\t}\n\t\t\t\ttemp = new QueryTreeNode(key, undefined);\n\t\t\t\troot.addChildren(temp);\n\t\t\t\tconst len = Array.from(value).length;\n\t\t\t\tfor(let i = 0; i < len; i++){\n\t\t\t\t\tthis.handleWhere(value[i],temp);\n\t\t\t\t}\n\t\t\t}else if(Negation.includes(key)){\n\t\t\t\tlet value = query[key as keyof typeof query];\n\t\t\t\tif(typeof value !== \"object\" || Array.isArray(value)) {\n\t\t\t\t\tthrow new InsightError(\"line 158 NOT must be object\");\n\t\t\t\t}\n\t\t\t\ttemp = new QueryTreeNode(key, undefined);\n\t\t\t\troot.addChildren(temp);\n\n\t\t\t\tthis.handleWhere(value,temp);\n\t\t\t}else{\n                // encounter an unknown key => invalid query\n\t\t\t\tthrow new InsightError(\"line 164 Invalid filter key\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleWhereBaseCase(query: object, root: QueryTreeNode) {\n\t\tlet key = Object.keys(query)[0];\n\t\tlet value = query[key as keyof typeof query];\n\t\tlet tempKey;\n\n\t\tif (Mcomparator.includes(root.getKey())) {\n\t\t\ttempKey = this.checkKeyValue(key, \"MCOMPARISON\", value);\n\t\t}else{\n\t\t\ttempKey = this.checkKeyValue(key, \"SCOMPARISON\", value);\n\t\t}\n\t\troot.setValue(value);\n\t\troot.setChildrenString(tempKey);\n\t}\n\n    /**\n     *\n     * @param query OPTIONS\n     * @param columns COLUMNS\n     * @param order ORDER --optional\n     * @param root the option node\n     * This function checks type in COLUMNS and ORDER clauses, check if they follow EBNF syntax rule\n     * Any violation will throw a new InsightError\n     */\n\tpublic handleOptions(options: object, columns: object, order: object, root: QueryTreeNode){\n\t\tfor(let key in options){\n\t\t\tif(key !== \"COLUMNS\" && key !== \"ORDER\"){\n\t\t\t\tthrow new InsightError(\"Invalid keys in OPTIONS\");\n\t\t\t}\n\t\t}\n\t\tlet temp;\n\t\tif(columns === undefined){\n\t\t\tconsole.log(\"line 174 OPTIONS missing COLUMNS\");\n\t\t\tthrow new InsightError();\n\t\t}else{\n\t\t\tif (!Array.isArray(columns) || Array.from(columns).length === 0){\n\t\t\t\tconsole.log(columns);\n\t\t\t\tconsole.log(\"line 180  COLUMNS must be a non-empty array\");\n\t\t\t\tthrow new InsightError();\n\t\t\t}\n\t\t\tlet newCol = [];\n\t\t\tfor(let str in columns){\n\t\t\t\tlet tempCol = this.checkKeyValue(columns[str],undefined,undefined);\n\t\t\t\tnewCol.push(tempCol);\n\t\t\t}\n\t\t\ttemp = new QueryTreeNode(\"COLUMNS\", newCol);\n\t\t\troot.addChildren(temp);\n\t\t}\n\n\t\tif(order !== undefined){\n\t\t\tif(typeof order !== \"string\" ){\n\t\t\t\tconsole.log(\"line 189  Invalid ORDER type\");\n\t\t\t\tthrow new InsightError();\n\t\t\t}else{\n\t\t\t\tif(!columns.includes(order)){\n\t\t\t\t\tconsole.log(\"line 193  ORDER key must be in COLUMNS\");\n\t\t\t\t\tthrow new InsightError();\n\t\t\t\t}\n\t\t\t\tlet index = String(order).search(\"_\");\n\t\t\t\tlet str;\n\t\t\t\tif(index === -1) {\n\t\t\t\t\tthrow new InsightError(\"no underscore in order\");\n\t\t\t\t}else{\n\t\t\t\t\tstr = String(order).substring(index + 1);\n\t\t\t\t\ttemp = new QueryTreeNode(\"ORDER\", str);\n\t\t\t\t\troot.addChildren(temp);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n    /**\n     *\n     * @param str  id_key in string, e.g. sessions_avg\n     * @param type can be either \"MCOMPARISON\", \"SCOMPARISON\"(where clause) or undefined(options clause)\n     * @param value string if \"SCOMPARISON\", number if \"MCOMPARISON\", or undefined\n     * @return key wuthout id\n     * This function will check if the id_key:value obeys EBNF syntax rules:\n     * -  \tkey:value type match (m/s)\n     * - \tid_key contains only one underscore\n     * - \treference only one dataset\n     * Any violation will throw new InsightError\n     */\n\tpublic checkKeyValue(str: string, type: string|undefined, value: string|number|undefined){\n        // console.log(\"____\" + str);\n\t\tlet index = str.search(\"_\");\n\t\tif(index === -1) {\n\t\t\tthrow new InsightError(\"no underscore in key\");\n\t\t}\n\t\tif((str.match(/_/g) || []).length > 1){\n\t\t\tthrow new InsightError(\"more than 1 underscore in key\");\n\t\t}\n\t\tif(this.id_str === \"\"){\n            // first time, set the id\n\t\t\tthis.id_str = str.substring(0,index);\n\t\t}else if(this.id_str !== str.substring(0,index)){\n\t\t\tthrow new InsightError(\"referenced two datasets\");\n\t\t}\n\t\tstr = str.substring(index + 1);\n        // 'avg' | 'pass' | 'fail' | 'audit' | 'year'\n\t\tif(str === \"avg\" || str === \"pass\" || str === \"fail\" || str === \"audit\" || str === \"year\"){\n\t\t\tif(type === \"SCOMPARISON\"){\n\t\t\t\tthrow new InsightError(\"Invalid key type\");\n\t\t\t}\n\t\t\tif(typeof value === \"string\"){\n\t\t\t\tthrow new InsightError(\"Invalid value type\");\n\t\t\t}\n\t\t}else if(str === \"dept\" || str === \"id\" || str === \"instructor\" || str === \"title\" || str === \"uuid\"){\n\t\t\tif(type === \"MCOMPARISON\"){\n\t\t\t\tthrow new InsightError(\"Invalid key type\");\n\t\t\t}\n\t\t\tif(typeof value === \"number\"){\n\t\t\t\tthrow new InsightError(\"Invalid value type\");\n\t\t\t}\n            // check wildcards\n\t\t\tif(typeof value === \"string\"){\n\t\t\t\tlet len = value.split(\"*\").length - 1;\n                // console.log(value + \" \" + len);\n\t\t\t\tif(len > 2){\n\t\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters of input strings\");\n\t\t\t\t}else if(len === 2){\n\t\t\t\t\tif(value[0] !== \"*\" || value[value.length - 1] !== \"*\"){\n\t\t\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters \" +\n                            \"of input strings\");\n\t\t\t\t\t}\n\t\t\t\t}else if(len === 1){\n\t\t\t\t\tif(value[0] !== \"*\" && value[value.length - 1] !== \"*\"){\n\t\t\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters \" +\n                            \"of input strings\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tconsole.log(\"Invalid key\");\n\t\t\tthrow new InsightError(\"Invalid key\");\n\t\t}\n\t\treturn str; // value without id\n\t}\n\n\tpublic getId(){\n\t\treturn this.id_str;\n\t}\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e877837e5b69b225f72e8967eddc1627e78c9938","contentHash":"8057f32fc05faa8ca1484f349ee2ce73235bf9cad43b5c40f1e399a12f968283"},"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryTreeNode.ts":{"path":"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryTreeNode.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":23}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":30}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":36}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},"9":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"10":{"start":{"line":26,"column":12},"end":{"line":26,"column":25}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"14":{"start":{"line":37,"column":8},"end":{"line":37,"column":35}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":32}},"16":{"start":{"line":43,"column":8},"end":{"line":43,"column":24}},"17":{"start":{"line":46,"column":16},"end":{"line":46,"column":113}},"18":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"19":{"start":{"line":48,"column":12},"end":{"line":48,"column":41}},"20":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"21":{"start":{"line":51,"column":12},"end":{"line":51,"column":41}},"22":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"23":{"start":{"line":53,"column":16},"end":{"line":53,"column":35}},"24":{"start":{"line":56,"column":8},"end":{"line":56,"column":20}},"25":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"26":{"start":{"line":58,"column":12},"end":{"line":58,"column":43}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":17}},"28":{"start":{"line":63,"column":8},"end":{"line":63,"column":36}},"29":{"start":{"line":66,"column":8},"end":{"line":66,"column":38}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"31":{"start":{"line":72,"column":8},"end":{"line":72,"column":36}},"32":{"start":{"line":75,"column":8},"end":{"line":75,"column":42}},"33":{"start":{"line":78,"column":0},"end":{"line":78,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":14,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":23},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":18},"end":{"line":29,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":15},"end":{"line":35,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":27},"end":{"line":38,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":24},"end":{"line":41,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":13},"end":{"line":44,"column":5}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":15},"end":{"line":61,"column":5}},"line":45},"11":{"name":"(anonymous_11)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":17},"end":{"line":64,"column":5}},"line":62},"12":{"name":"(anonymous_12)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":19},"end":{"line":67,"column":5}},"line":65},"13":{"name":"(anonymous_13)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":19},"end":{"line":70,"column":5}},"line":68},"14":{"name":"(anonymous_14)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":17},"end":{"line":73,"column":5}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":15},"end":{"line":76,"column":5}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"1":{"loc":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},{"start":{"line":50,"column":8},"end":{"line":55,"column":9}}],"line":50}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ellenzhang/Desktop/project_team213/src/controller/QueryTreeNode.ts","sources":["/Users/ellenzhang/Desktop/project_team213/src/controller/QueryTreeNode.ts"],"names":[],"mappings":";;;AAEA,MAAa,aAAa;IACjB,GAAG,CAAS;IACZ,KAAK,CAAmC;IACxC,QAAQ,CAAkB;IAC1B,WAAW,CAAW;IAE9B,YAAY,GAAW,EAAE,KAAuC;QAC/D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAEvB,CAAC;IAEM,eAAe;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC7B,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IACM,WAAW,CAAC,KAAoB;QACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,WAAW;QACjB,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAC;YAC7B,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACM,QAAQ,CAAC,GAAqC;QACpD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IACM,iBAAiB,CAAC,GAAW;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IACM,iBAAiB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,QAAQ;QACd,IAAI,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,eAAe,CAAC;QAC1G,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAC;YAChC,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC;YAC7B,KAAI,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW,EAAC;gBAClC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;aACnB;SACD;QACD,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QACZ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC/B;QAGD,OAAO,CAAC,CAAC;IACV,CAAC;IAEM,UAAU;QAChB,OAAO,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC;IAC7B,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC;IAC/B,CAAC;IACM,YAAY;QAClB,OAAO,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC;IAC/B,CAAC;IACM,UAAU;QAChB,OAAO,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC;IAC7B,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;CAGD;AAvFD,sCAuFC","sourcesContent":["\n\nexport class QueryTreeNode {\n\tprivate key: string;\n\tprivate value: number|string|string[]|undefined;\n\tprivate children: QueryTreeNode[];\n\tprivate childrenStr: string[];\n\n\tconstructor(key: string, value: number|string|string[]|undefined){\n\t\tthis.key = key;\n\t\tthis.value = value;\n\t\tthis.children = [];\n\t\tthis.childrenStr = [];\n\n\t}\n\n\tpublic getChildrenSize(){\n\t\treturn this.children.length;\n\t}\n\n\tpublic getChildren(){\n\t\treturn this.children;\n\t}\n\tpublic addChildren(child: QueryTreeNode){\n\t\tthis.children.push(child);\n\t}\n\n\tpublic hasChildren(){\n\t\tif(this.children.length === 0){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tpublic setValue(val: number|string|string[]|undefined){\n\t\tthis.value = val;\n\t}\n\n\tpublic getValue(){\n\t\treturn this.value;\n\t}\n\tpublic setChildrenString(str: string){\n\t\tthis.childrenStr.push(str);\n\t}\n\tpublic getChildrenString(){\n\t\treturn this.childrenStr;\n\t}\n\n\tpublic getKey(){\n\t\treturn this.key;\n\t}\n\n\tpublic toString(){\n\t\tlet s = \"key:[\" + this.key + \"] value: [\" + this.value + \"] [\" + this.getChildrenSize() + \"] children: [\";\n\t\tfor (const item of this.children) {\n\t\t\ts = s + item.getKey() + \", \";\n\t\t}\n\t\tif(this.childrenStr.length !== 0){\n\t\t\ts = s + \"] children_name: [\";\n\t\t\tfor(const item of this.childrenStr){\n\t\t\t\ts = s + item + \",\";\n\t\t\t}\n\t\t}\n\t\ts = s + \"]\";\n\t\tfor (const item of this.children) {\n\t\t\ts = s + \"\\n\" + item.toString();\n\t\t}\n\n\n\t\treturn s;\n\t}\n\n\tpublic isKeyWhere(){\n\t\treturn this.key === \"WHERE\";\n\t}\n\n\tpublic isKeyOptions(){\n\t\treturn this.key === \"OPTIONS\";\n\t}\n\tpublic isKeyColumns(){\n\t\treturn this.key === \"COLUMNS\";\n\t}\n\tpublic isKeyOrder(){\n\t\treturn this.key === \"ORDER\";\n\t}\n\tpublic isKeyKey(){\n\t\t return this.key.indexOf(\"_\") > -1;\n\t}\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"38963c4106889522a101f175bc2c5b2884c06826","contentHash":"3562be183785109ece5e972d2f030d51efa0f0503df04c7d259ab23c47031071"}}